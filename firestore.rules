rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // User profiles - users can read and write only their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Health records - users can read and write only their own health data
    match /healthRecords/{recordId} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Voice analysis - users can read and write only their own voice analysis data
    match /voiceAnalysis/{analysisId} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Doctor advice - users can read and write only their own doctor advice data
    match /doctorAdvice/{adviceId} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Conversations - users can read and write only their own conversation data
    match /conversations/{conversationId} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Skin analysis - users can read and write only their own skin analysis data
    match /skinAnalysis/{analysisId} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Chatbot knowledge base - anyone can read, only admins can write
    match /chatbotKnowledge/{docId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
